{"version":3,"file":"Contact-CdQtN2hR.js","sources":["../../src/components/FormField.tsx","../../src/utils/validation.ts","../../src/pages/Contact.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ninterface FormFieldProps {\r\n  id: string;\r\n  label: string;\r\n  type?: 'text' | 'email' | 'tel' | 'textarea' | 'number';\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  error?: string;\r\n  required?: boolean;\r\n  placeholder?: string;\r\n  rows?: number;\r\n  min?: number;\r\n  max?: number;\r\n  step?: number;\r\n}\r\n\r\n/**\r\n * Accessible form field component with ARIA live regions for validation\r\n */\r\nconst FormField: React.FC<FormFieldProps> = ({\r\n  id,\r\n  label,\r\n  type = 'text',\r\n  value,\r\n  onChange,\r\n  error,\r\n  required = false,\r\n  placeholder,\r\n  rows = 4,\r\n  min,\r\n  max,\r\n  step,\r\n}) => {\r\n  const hasError = Boolean(error);\r\n  const errorId = `${id}-error`;\r\n  const helpId = `${id}-help`;\r\n\r\n  const commonProps = {\r\n    id,\r\n    value,\r\n    onChange: (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => \r\n      onChange(e.target.value),\r\n    className: `w-full bg-white/5 border ${\r\n      hasError ? 'border-red-500' : 'border-white/10'\r\n    } rounded-xl px-4 py-3 text-white placeholder-gray-500 focus:outline-none focus:border-blue-500 transition-colors`,\r\n    placeholder,\r\n    required,\r\n    'aria-required': required,\r\n    'aria-invalid': hasError,\r\n    'aria-describedby': hasError ? errorId : undefined,\r\n  };\r\n\r\n  return (\r\n    <div className=\"mb-6\">\r\n      <label \r\n        htmlFor={id} \r\n        className=\"block text-white font-medium mb-2 text-sm\"\r\n      >\r\n        {label}\r\n        {required && (\r\n          <span className=\"text-red-400 ml-1\" aria-label=\"required\">*</span>\r\n        )}\r\n      </label>\r\n      \r\n      {type === 'textarea' ? (\r\n        <textarea\r\n          {...commonProps}\r\n          rows={rows}\r\n        />\r\n      ) : (\r\n        <input\r\n          {...commonProps}\r\n          type={type}\r\n          min={min}\r\n          max={max}\r\n          step={step}\r\n        />\r\n      )}\r\n      \r\n      {/* ARIA live region for error messages */}\r\n      {hasError && (\r\n        <div\r\n          id={errorId}\r\n          role=\"alert\"\r\n          aria-live=\"polite\"\r\n          aria-atomic=\"true\"\r\n          className=\"mt-2 text-red-400 text-sm flex items-start\"\r\n        >\r\n          <svg \r\n            className=\"w-4 h-4 mr-2 mt-0.5 flex-shrink-0\" \r\n            fill=\"currentColor\" \r\n            viewBox=\"0 0 20 20\"\r\n            aria-hidden=\"true\"\r\n          >\r\n            <path \r\n              fillRule=\"evenodd\" \r\n              d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" \r\n              clipRule=\"evenodd\" \r\n            />\r\n          </svg>\r\n          <span>{error}</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormField;\r\n\r\n","/**\r\n * Form Validation Utilities\r\n * Provides validation functions with descriptive error messages\r\n */\r\n\r\nexport interface ValidationResult {\r\n  isValid: boolean;\r\n  error?: string;\r\n}\r\n\r\n/**\r\n * Validate email format\r\n */\r\nexport const validateEmail = (email: string): ValidationResult => {\r\n  if (!email || email.trim() === '') {\r\n    return { isValid: false, error: 'Email address is required' };\r\n  }\r\n\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  if (!emailRegex.test(email)) {\r\n    return { isValid: false, error: 'Please enter a valid email address' };\r\n  }\r\n\r\n  return { isValid: true };\r\n};\r\n\r\n/**\r\n * Validate required text field\r\n */\r\nexport const validateRequired = (value: string, fieldName: string): ValidationResult => {\r\n  if (!value || value.trim() === '') {\r\n    return { isValid: false, error: `${fieldName} is required` };\r\n  }\r\n\r\n  if (value.trim().length < 2) {\r\n    return { isValid: false, error: `${fieldName} must be at least 2 characters` };\r\n  }\r\n\r\n  return { isValid: true };\r\n};\r\n\r\n/**\r\n * Validate phone number\r\n */\r\nexport const validatePhone = (phone: string): ValidationResult => {\r\n  if (!phone || phone.trim() === '') {\r\n    return { isValid: false, error: 'Phone number is required' };\r\n  }\r\n\r\n  // Remove all non-digit characters for validation\r\n  const digitsOnly = phone.replace(/\\D/g, '');\r\n  \r\n  if (digitsOnly.length < 10) {\r\n    return { isValid: false, error: 'Phone number must be at least 10 digits' };\r\n  }\r\n\r\n  return { isValid: true };\r\n};\r\n\r\n/**\r\n * Validate message/textarea\r\n */\r\nexport const validateMessage = (message: string, minLength = 10): ValidationResult => {\r\n  if (!message || message.trim() === '') {\r\n    return { isValid: false, error: 'Message is required' };\r\n  }\r\n\r\n  if (message.trim().length < minLength) {\r\n    return { \r\n      isValid: false, \r\n      error: `Message must be at least ${minLength} characters (currently ${message.trim().length})` \r\n    };\r\n  }\r\n\r\n  return { isValid: true };\r\n};\r\n\r\n/**\r\n * Validate number range\r\n */\r\nexport const validateNumber = (\r\n  value: string | number,\r\n  fieldName: string,\r\n  min?: number,\r\n  max?: number\r\n): ValidationResult => {\r\n  const num = typeof value === 'string' ? parseFloat(value) : value;\r\n\r\n  if (isNaN(num)) {\r\n    return { isValid: false, error: `${fieldName} must be a valid number` };\r\n  }\r\n\r\n  if (min !== undefined && num < min) {\r\n    return { isValid: false, error: `${fieldName} must be at least ${min}` };\r\n  }\r\n\r\n  if (max !== undefined && num > max) {\r\n    return { isValid: false, error: `${fieldName} must be at most ${max}` };\r\n  }\r\n\r\n  return { isValid: true };\r\n};\r\n\r\n/**\r\n * Validate company name\r\n */\r\nexport const validateCompany = (company: string): ValidationResult => {\r\n  if (!company || company.trim() === '') {\r\n    return { isValid: false, error: 'Company name is required' };\r\n  }\r\n\r\n  if (company.trim().length < 2) {\r\n    return { isValid: false, error: 'Company name must be at least 2 characters' };\r\n  }\r\n\r\n  return { isValid: true };\r\n};\r\n\r\n/**\r\n * Validate full form and return all errors\r\n */\r\nexport interface FormErrors {\r\n  [key: string]: string;\r\n}\r\n\r\nexport const validateForm = (\r\n  fields: { [key: string]: any },\r\n  validators: { [key: string]: (value: any) => ValidationResult }\r\n): FormErrors => {\r\n  const errors: FormErrors = {};\r\n\r\n  Object.keys(validators).forEach((fieldName) => {\r\n    const validator = validators[fieldName];\r\n    const value = fields[fieldName];\r\n    const result = validator(value);\r\n\r\n    if (!result.isValid && result.error) {\r\n      errors[fieldName] = result.error;\r\n    }\r\n  });\r\n\r\n  return errors;\r\n};\r\n\r\n/**\r\n * Check if form has any errors\r\n */\r\nexport const hasFormErrors = (errors: FormErrors): boolean => {\r\n  return Object.keys(errors).length > 0;\r\n};\r\n\r\n","import React, { useState } from 'react';\r\nimport { Send, Phone, Mail, ArrowLeft } from 'lucide-react';\r\nimport { Link } from 'react-router-dom';\r\nimport TypeWriter from '../components/TypeWriter';\r\nimport ScrollReveal from '../components/ScrollReveal';\r\nimport FormField from '../components/FormField';\r\nimport { validateEmail, validateRequired, validatePhone, validateMessage, validateForm, hasFormErrors, FormErrors } from '../utils/validation';\r\n\r\nconst Contact = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    businessName: '',\r\n    message: ''\r\n  });\r\n\r\n  const [errors, setErrors] = useState<FormErrors>({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [submitSuccess, setSubmitSuccess] = useState(false);\r\n\r\n  const handleFieldChange = (field: string, value: string) => {\r\n    setFormData({\r\n      ...formData,\r\n      [field]: value\r\n    });\r\n    \r\n    // Clear error for this field when user starts typing\r\n    if (errors[field]) {\r\n      setErrors({\r\n        ...errors,\r\n        [field]: ''\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setSubmitSuccess(false);\r\n\r\n    // Validate all fields\r\n    const validationErrors = validateForm(formData, {\r\n      name: (value) => validateRequired(value, 'Name'),\r\n      email: validateEmail,\r\n      phone: validatePhone,\r\n      businessName: (value) => validateRequired(value, 'Company name'),\r\n      message: (value) => validateMessage(value, 20),\r\n    });\r\n\r\n    if (hasFormErrors(validationErrors)) {\r\n      setErrors(validationErrors);\r\n      // Focus on first error field\r\n      const firstErrorField = Object.keys(validationErrors)[0];\r\n      document.getElementById(firstErrorField)?.focus();\r\n      return;\r\n    }\r\n\r\n    // Form is valid, submit\r\n    setIsSubmitting(true);\r\n    console.log('Form submitted:', formData);\r\n    \r\n    // Simulate submission (replace with actual API call)\r\n    setTimeout(() => {\r\n      setIsSubmitting(false);\r\n      setSubmitSuccess(true);\r\n      setFormData({ name: '', email: '', phone: '', businessName: '', message: '' });\r\n      setErrors({});\r\n    }, 1000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"pt-20\">\r\n      {/* Contact Section */}\r\n      <section className=\"py-12 seamless-section relative overflow-hidden min-h-screen flex items-center\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 w-full\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-start\">\r\n            {/* Contact Info - Left Side */}\r\n            <div className=\"lg:pr-8\">\r\n              <TypeWriter \r\n                text=\"Get In\" \r\n                as=\"h1\"\r\n                className=\"text-4xl md:text-5xl font-bold mb-4 text-white leading-tight\"\r\n                delay={100}\r\n              >\r\n                <span className=\"block bg-gradient-to-r from-blue-400 to-purple-400 bg-clip-text text-transparent\">\r\n                  Touch\r\n                </span>\r\n              </TypeWriter>\r\n              <ScrollReveal delay={200}>\r\n                <p className=\"text-base text-gray-400 mb-8 leading-relaxed\">\r\n                  Ready to automate your business operations? Let's discuss how our AI solutions can help\r\n                  increase your productivity and reduce costs.\r\n                </p>\r\n              </ScrollReveal>\r\n\r\n              <div className=\"space-y-4\">\r\n                <ScrollReveal delay={300}>\r\n                  <div className=\"flex items-center space-x-4\">\r\n                    <div className=\"w-12 h-12 bg-white rounded-xl flex items-center justify-center\">\r\n                      <Phone className=\"w-6 h-6 text-black\" />\r\n                    </div>\r\n                    <div>\r\n                      <h4 className=\"text-lg font-medium text-white\">Phone</h4>\r\n                      <p className=\"text-gray-400\">(+27) 82 644 2575</p>\r\n                    </div>\r\n                  </div>\r\n                </ScrollReveal>\r\n\r\n                <ScrollReveal delay={400}>\r\n                  <div className=\"flex items-center space-x-4\">\r\n                    <div className=\"w-12 h-12 bg-white rounded-xl flex items-center justify-center\">\r\n                      <Mail className=\"w-6 h-6 text-black\" />\r\n                    </div>\r\n                    <div>\r\n                      <h4 className=\"text-lg font-medium text-white\">Email</h4>\r\n                      <p className=\"text-gray-400\">automate.hub1@gmail.com</p>\r\n                    </div>\r\n                  </div>\r\n                </ScrollReveal>\r\n\r\n              </div>\r\n\r\n              <ScrollReveal delay={500}>\r\n                <div \r\n                  className=\"mt-8 p-6 bg-white/5 border border-white/20 rounded-2xl mobile-3d-tilt relative\"\r\n                  style={{\r\n                    transformStyle: 'preserve-3d',\r\n                    boxShadow: '0 10px 30px rgba(0, 0, 0, 0.3), 0 1px 8px rgba(0, 0, 0, 0.2)',\r\n                    transition: 'transform 0.1s ease-out, border-color 0.3s',\r\n                    perspective: '1000px',\r\n                  }}\r\n                  onMouseMove={(e) => {\r\n                    const rect = e.currentTarget.getBoundingClientRect();\r\n                    const x = e.clientX - rect.left;\r\n                    const y = e.clientY - rect.top;\r\n                    const centerX = rect.width / 2;\r\n                    const centerY = rect.height / 2;\r\n                    const rotateX = (y - centerY) / 20;\r\n                    const rotateY = (centerX - x) / 20;\r\n                    e.currentTarget.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) translateZ(10px)`;\r\n                  }}\r\n                  onMouseLeave={(e) => {\r\n                    e.currentTarget.style.transform = 'perspective(1000px) rotateX(0) rotateY(0) translateZ(0)';\r\n                  }}\r\n                >\r\n                  <h4 className=\"text-lg font-medium text-white mb-4\" style={{ transform: 'translateZ(15px)' }}>What to Expect:</h4>\r\n                  <ul className=\"space-y-2 text-gray-400 text-sm\" style={{ transform: 'translateZ(10px)' }}>\r\n                    <li>• Free consultation to understand your needs</li>\r\n                    <li>• Custom automation recommendations</li>\r\n                    <li>• Clear timeline and next steps</li>\r\n                    <li>• No pressure, just helpful guidance</li>\r\n                  </ul>\r\n                </div>\r\n              </ScrollReveal>\r\n            </div>\r\n\r\n            {/* Contact Form - Right Side */}\r\n            <ScrollReveal delay={100}>\r\n              <div \r\n                className=\"bg-white/5 border border-white/10 rounded-3xl p-8 lg:sticky lg:top-24 mobile-3d-popup relative\"\r\n                style={{\r\n                  transformStyle: 'preserve-3d',\r\n                  boxShadow: '0 10px 30px rgba(0, 0, 0, 0.3), 0 1px 8px rgba(0, 0, 0, 0.2)',\r\n                  transition: 'transform 0.3s ease-out, box-shadow 0.3s ease-out',\r\n                  perspective: '1000px',\r\n                }}\r\n                onMouseEnter={(e) => {\r\n                  e.currentTarget.style.transform = 'translateY(-8px) translateZ(20px) scale(1.02)';\r\n                  e.currentTarget.style.boxShadow = '0 20px 40px rgba(0, 0, 0, 0.4), 0 2px 16px rgba(0, 0, 0, 0.3)';\r\n                }}\r\n                onMouseLeave={(e) => {\r\n                  e.currentTarget.style.transform = 'translateY(0) translateZ(0) scale(1)';\r\n                  e.currentTarget.style.boxShadow = '0 10px 30px rgba(0, 0, 0, 0.3), 0 1px 8px rgba(0, 0, 0, 0.2)';\r\n                }}\r\n              >\r\n                <h3 className=\"text-2xl font-bold mb-6 text-white\" style={{ transform: 'translateZ(10px)' }}>Send Us a Message</h3>\r\n                \r\n                {/* Success message with ARIA live region */}\r\n                {submitSuccess && (\r\n                  <div\r\n                    role=\"status\"\r\n                    aria-live=\"polite\"\r\n                    aria-atomic=\"true\"\r\n                    className=\"mb-6 p-4 bg-green-500/20 border border-green-500/50 rounded-xl text-green-400 flex items-start\"\r\n                  >\r\n                    <svg \r\n                      className=\"w-5 h-5 mr-3 mt-0.5 flex-shrink-0\" \r\n                      fill=\"currentColor\" \r\n                      viewBox=\"0 0 20 20\"\r\n                      aria-hidden=\"true\"\r\n                    >\r\n                      <path \r\n                        fillRule=\"evenodd\" \r\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" \r\n                        clipRule=\"evenodd\" \r\n                      />\r\n                    </svg>\r\n                    <span>Thank you for your message! We'll get back to you within 24 hours.</span>\r\n                  </div>\r\n                )}\r\n                \r\n                <form onSubmit={handleSubmit} className=\"space-y-4\" noValidate aria-label=\"Contact form\">\r\n                  <FormField\r\n                    id=\"name\"\r\n                    label=\"Full Name\"\r\n                    type=\"text\"\r\n                    value={formData.name}\r\n                    onChange={(value) => handleFieldChange('name', value)}\r\n                    error={errors.name}\r\n                    required\r\n                    placeholder=\"John Doe\"\r\n                  />\r\n\r\n                  <FormField\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    type=\"email\"\r\n                    value={formData.email}\r\n                    onChange={(value) => handleFieldChange('email', value)}\r\n                    error={errors.email}\r\n                    required\r\n                    placeholder=\"john@company.com\"\r\n                  />\r\n\r\n                  <FormField\r\n                    id=\"phone\"\r\n                    label=\"Phone Number\"\r\n                    type=\"tel\"\r\n                    value={formData.phone}\r\n                    onChange={(value) => handleFieldChange('phone', value)}\r\n                    error={errors.phone}\r\n                    required\r\n                    placeholder=\"+1 (555) 123-4567\"\r\n                  />\r\n\r\n                  <FormField\r\n                    id=\"businessName\"\r\n                    label=\"Company Name\"\r\n                    type=\"text\"\r\n                    value={formData.businessName}\r\n                    onChange={(value) => handleFieldChange('businessName', value)}\r\n                    error={errors.businessName}\r\n                    required\r\n                    placeholder=\"Your Company\"\r\n                  />\r\n\r\n                  <FormField\r\n                    id=\"message\"\r\n                    label=\"Message\"\r\n                    type=\"textarea\"\r\n                    value={formData.message}\r\n                    onChange={(value) => handleFieldChange('message', value)}\r\n                    error={errors.message}\r\n                    required\r\n                    placeholder=\"Tell us about your automation needs...\"\r\n                    rows={5}\r\n                  />\r\n\r\n                  <div style={{ position: 'relative', zIndex: 10 }}>\r\n                    <button\r\n                      type=\"submit\"\r\n                      disabled={isSubmitting}\r\n                      className=\"w-full bg-white text-black hover:bg-gray-100 px-6 py-3 rounded-xl font-semibold text-base flex items-center justify-center disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                      style={{\r\n                        boxShadow: '0 10px 30px rgba(0, 0, 0, 0.3), 0 1px 8px rgba(0, 0, 0, 0.2)',\r\n                        transition: 'transform 0.3s ease-out, background-color 0.3s, box-shadow 0.3s ease-out',\r\n                        position: 'relative',\r\n                      }}\r\n                      onMouseEnter={(e) => {\r\n                        if (!isSubmitting) {\r\n                          e.currentTarget.style.transform = 'scale(1.08) translateY(-2px)';\r\n                          e.currentTarget.style.boxShadow = '0 20px 40px rgba(0, 0, 0, 0.5), 0 4px 20px rgba(255, 255, 255, 0.3)';\r\n                        }\r\n                      }}\r\n                      onMouseLeave={(e) => {\r\n                        e.currentTarget.style.transform = 'scale(1) translateY(0)';\r\n                        e.currentTarget.style.boxShadow = '0 10px 30px rgba(0, 0, 0, 0.3), 0 1px 8px rgba(0, 0, 0, 0.2)';\r\n                      }}\r\n                      aria-label={isSubmitting ? \"Sending message...\" : \"Send message\"}\r\n                    >\r\n                      <Send className=\"mr-2 w-4 h-4\" aria-hidden=\"true\" />\r\n                      {isSubmitting ? 'Sending...' : 'Send Message'}\r\n                    </button>\r\n                  </div>\r\n\r\n                  <p className=\"text-xs text-gray-500 text-center\">\r\n                    We'll respond within 24 hours during business hours\r\n                  </p>\r\n                </form>\r\n              </div>\r\n            </ScrollReveal>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      {/* Back to Homepage */}\r\n      <section className=\"py-12 seamless-section\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"text-center\">\r\n            <Link \r\n              to=\"/\"\r\n              className=\"inline-flex items-center text-gray-400 hover:text-white transition-all duration-300 hover-pop-text\"\r\n              aria-label=\"Navigate back to homepage\"\r\n            >\r\n              <ArrowLeft className=\"mr-2 w-4 h-4\" aria-hidden=\"true\" />\r\n              Back to Homepage\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Contact;"],"names":["FormField","id","label","type","value","onChange","error","required","placeholder","rows","min","max","step","hasError","errorId","commonProps","e","jsxs","jsx","validateEmail","email","validateRequired","fieldName","validatePhone","phone","validateMessage","message","minLength","validateForm","fields","validators","errors","validator","result","hasFormErrors","Contact","formData","setFormData","useState","setErrors","isSubmitting","setIsSubmitting","submitSuccess","setSubmitSuccess","handleFieldChange","field","handleSubmit","validationErrors","firstErrorField","_a","TypeWriter","ScrollReveal","Phone","Mail","rect","x","y","centerX","centerY","rotateX","rotateY","Send","Link","ArrowLeft"],"mappings":"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"}